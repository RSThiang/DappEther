{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\deltacoin-project\\\\my-eth-transfer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/components/Transfer.js\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport SimpleTransfer from \"./contracts/EtherTransfer.json\"; // Assurez-vous que le chemin est correct\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transfer = () => {\n  _s();\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [web3, setWeb3] = useState(null); // État pour web3\n  const [transactions, setTransactions] = useState([]); // Transactions\n  const [selectedTransaction, setSelectedTransaction] = useState(null); // Détails de la transaction\n  const [isFormOpen, setFormOpen] = useState(false); // État pour gérer l'affichage du formulaire\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        // Récupérer tous les comptes de Ganache ou MetaMask\n        const accounts = await web3Instance.eth.getAccounts();\n        setAccounts(accounts); // Stocker les comptes\n\n        // Initialisation du contrat\n        const networkId = await web3Instance.eth.net.getId();\n        const deployedNetwork = SimpleTransfer.networks[networkId];\n        const contractInstance = new web3Instance.eth.Contract(SimpleTransfer.abi, deployedNetwork && deployedNetwork.address);\n        // console.log(web3Instance.eth.abi.decodeParameter(\"address\",\"0x1a695230000000000000000000000000a7ea720af8ce30e438c1a252ba6905b5dbe50be6\".slice(10)));\n        //console.log(abit);\n        setContract(contractInstance); // Définir le contrat\n        setWeb3(web3Instance); // Stocker l'instance de web3\n\n        // Sélectionner le premier compte par défaut\n        if (accounts.length > 0) {\n          setSelectedAccount(accounts[0]);\n          // Récupérer le solde du compte sélectionné\n          const balance = await web3Instance.eth.getBalance(accounts[0]);\n          setAccountBalance(web3Instance.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n          // const abi = SimpleTransfer.abi;\n          // Charger les transactions du compte principal\n          loadTransactions(web3Instance, accounts[0]);\n        }\n      } catch (error) {\n        alert(\"Error connecting to contract or blockchain\");\n        console.error(\"Error connecting to contract or blockchain\", error);\n      }\n    };\n    init();\n  }, []);\n  const loadTransactions = async (web3Instance, account) => {\n    //const ab = SimpleTransfer.abi;\n    try {\n      let latestBlock = await web3Instance.eth.getBlockNumber();\n      latestBlock = latestBlock.toString(); // Convertir en chaîne de caractères pour éviter les erreurs BigInt\n\n      //console.log(`Dernier bloc : ${latestBlock}`);\n\n      const transactions = [];\n\n      // Parcourir les blocs récents\n      // for (let i = parseInt(latestBlock); i >= parseInt(latestBlock) - 100 && i >= 0; i--) {\n      //   const block = await web3Instance.eth.getBlock(i, true);\n\n      //   // Vérifier s'il y a des transactions dans le bloc\n      //   if (block && block.transactions.length > 0) {\n      //     //console.log(`Bloc numéro ${i} contient ${block.transactions.length} transactions`);\n\n      //  // console.log(block);\n      //     block.transactions.forEach((tx) => {\n      //       const decodedTo = web3Instance.eth.abi.decodeParameter(\"address\", tx.input.slice(10)); // Décoder l'adresse \"to\"\n      //       //console.log(decodedTo);\n      //       // Afficher chaque transaction pour voir ses champs\n      //       //console.log(`Transaction trouvée :`, tx);\n      //       //console.log(tx);\n\n      //     if ( account.toLowerCase() ===  tx.from.toLowerCase() ||\n      //     decodedTo.toLowerCase() === tx.to?.toLowerCase()\n      //      ) {\n\n      //       const transactionDetails = {\n      //         hash: tx.hash,\n      //         from: tx.from,\n      //         to : decodedTo,\n\n      //        // to: web3Instance.eth.abi.decodeParameter(\"address\",tx.input.slice(10)),\n\n      //         value: web3Instance.utils.fromWei(tx.value, \"ether\"), // Convertir en ETH\n      //         timestamp: block.timestamp, // Récupérer le timestamp du bloc\n      //         blockNumber: i,\n      //         type: tx.from.toLowerCase() === account.toLowerCase() ? \"sent\" : \"received\" // Définir le type\n      //       };\n      //      // console.log(`Hash: ${tx.hash}, From: ${tx.from}, To: ${tx.to}, Value: ${tx.value} ETH, Block: ${tx.blockNumber}, Timestamp: ${new Date(tx.timestamp * 1000).toLocaleString()}`);\n\n      //       transactions.push(transactionDetails); \n      //       console.log(transactions);\n      //       }\n      //     });\n      //   } \n      // }\n      for (let i = parseInt(latestBlock); i >= parseInt(latestBlock) - 100 && i >= 0; i--) {\n        const block = await web3Instance.eth.getBlock(i, true);\n        if (block && block.transactions.length > 0) {\n          block.transactions.forEach(tx => {\n            let transactionDetails = null;\n            console.log(tx.from, tx.to, account);\n            // Vérifier si l'expéditeur ou le destinataire correspond au compte\n            if (tx.from.toLowerCase() === account.toLowerCase()) {\n              // Transaction envoyée\n              transactionDetails = {\n                hash: tx.hash,\n                from: tx.from,\n                to: tx.to,\n                value: web3Instance.utils.fromWei(tx.value, \"ether\"),\n                // Convertir en ETH\n                timestamp: block.timestamp,\n                blockNumber: i,\n                type: \"sent\"\n              };\n            } else if (tx.to && tx.to.toLowerCase() === account.toLowerCase()) {\n              // Transaction reçue\n              console.log(tx.to);\n              transactionDetails = {\n                hash: tx.hash,\n                from: tx.from,\n                to: tx.to,\n                value: web3Instance.utils.fromWei(tx.value, \"ether\"),\n                // Convertir en ETH\n                timestamp: block.timestamp,\n                blockNumber: i,\n                type: \"received\"\n              };\n            }\n            console.log(transactionDetails);\n            if (transactionDetails.type) {\n              transactions.push(transactionDetails); // Ajouter chaque transaction\n            }\n            console.log(transactions);\n          });\n        }\n      }\n\n      //console.log(\"Transactions récupérées : \", transactions);\n      //return transactions;\n\n      //console.log(`Transactions associées à l'adresse :`, transactions);\n      // Mettre à jour l'état avec les transactions trouvées\n      setTransactions(transactions);\n      console.log(transactions);\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au contrat ou à la blockchain :\", error);\n    }\n  };\n  const handleTransfer = async () => {\n    if (!recipient || !amount) {\n      setMessage(\"Veuillez entrer une adresse et un montant valides.\");\n      return;\n    }\n    const value = Number(amount);\n    if (value <= 0 || value > accountBalance) {\n      setMessage(\"Le montant doit être supérieur à 0 et ne peut pas dépasser le solde.\");\n      return;\n    }\n    try {\n      await contract.methods.transfer(recipient).send({\n        from: selectedAccount,\n        // Utiliser le compte sélectionné\n        value: web3.utils.toWei(amount, \"ether\") // Utiliser l'instance de web3\n      });\n      //alert(`Transfert de ${amount} ETH vers ${recipient} réussi.`)\n      setMessage(`Transfert de ${amount} ETH vers ${recipient} réussi.`);\n\n      // Mettre à jour le solde du compte après le transfert\n      const balance = await web3.eth.getBalance(selectedAccount); // Vérifier le nouveau solde\n      setAccountBalance(web3.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n    } catch (error) {\n      setMessage(\"Échec du transfert.\");\n      console.error(error);\n    }\n  };\n  const openForm = () => setFormOpen(true); // Ouvrir le formulaire de transfert\n  const closeForm = () => setFormOpen(false); // Fermer le formulaire de transfert\n\n  const handleTransactionClick = tx => {\n    //console.log(tx);\n    setSelectedTransaction(tx);\n    // Stocker la transaction sélectionnée pour afficher les détails\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containr\",\n    children: [!selectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titre\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Bienvenue sur notre DApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cette application d\\xE9centralis\\xE9e permet d'effectuer des transferts s\\xE9curis\\xE9s de cryptomonnaies en utilisant la blockchain Ethereum.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this), \"onnectez votre portefeuille et commencez \\xE0 envoyer des fonds en toute s\\xE9curit\\xE9 !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), !selectedAccount ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"b btn btn-primary\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }),\n      children: \"Se Connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Compte\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mon Compte : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", accountBalance, \" ETH \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary t\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: openForm,\n        children: \"Faire un Transfert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), isFormOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal show\",\n        style: {\n          display: 'block'\n        },\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                children: \"Transf\\xE9rer des Ethers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Adresse du Destinataire:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select mb-3\",\n                value: recipient,\n                onChange: e => setRecipient(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"S\\xE9lectionnez une adresse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 13\n                }, this), accounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account,\n                  children: account\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 15\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Montant (ETH):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"form-control mb-3\",\n                value: amount,\n                onChange: e => setAmount(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleTransfer,\n                children: \"Envoyer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: closeForm,\n                children: \"Fermer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tr\",\n        children: \"Mes Transactions \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ls\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group \",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item  d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge rounded-pill\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Montant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 22\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), transactions.length > 0 ? transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item  d-flex justify-content-between align-items-center\",\n            onClick: () => handleTransactionClick(tx),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge rounded-pill\",\n              children: tx.blockNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", tx.hash.substring(0, 20), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: tx.type === \"sent\" ? \"red\" : \"green\",\n                fontWeight: \"bold\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: tx.type === \"sent\" ? `- ${tx.value} ETH` : `+ ${tx.value} ETH`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 15\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucune transaction trouv\\xE9e.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 5\n      }, this), selectedTransaction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal show\",\n        style: {\n          display: 'block'\n        },\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                children: [\" Transaction \", selectedTransaction.blockNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Hash:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 12\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: selectedTransaction.hash,\n                  children: [selectedTransaction.hash.substring(0, 20), \"...\", selectedTransaction.hash.substring(selectedTransaction.hash.length - 20)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Tranfer de \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 14\n                }, this), \" \", selectedTransaction.value, \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedTransaction.type === \"sent\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-danger\",\n                  children: \"Envoy\\xE9e\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 15\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-success\",\n                  children: \"Re\\xE7ue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Le:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 14\n                }, this), \" \", new Date(selectedTransaction.timestamp.toString() * 1000).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => setSelectedTransaction(null),\n                children: \"Fermer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(Transfer, \"Cncz+397qAzvW6zHQQ5VpcmfjB4=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useEffect","Web3","SimpleTransfer","jsxDEV","_jsxDEV","Fragment","_Fragment","Transfer","_s","selectedAccount","setSelectedAccount","accounts","setAccounts","contract","setContract","accountBalance","setAccountBalance","recipient","setRecipient","amount","setAmount","message","setMessage","web3","setWeb3","transactions","setTransactions","selectedTransaction","setSelectedTransaction","isFormOpen","setFormOpen","init","web3Instance","window","ethereum","request","method","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","length","balance","getBalance","utils","fromWei","loadTransactions","error","alert","console","account","latestBlock","getBlockNumber","toString","i","parseInt","block","getBlock","forEach","tx","transactionDetails","log","from","to","toLowerCase","hash","value","timestamp","blockNumber","type","push","handleTransfer","Number","methods","transfer","send","toWei","openForm","closeForm","handleTransactionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","cursor","onClick","display","tabIndex","role","onChange","e","target","map","index","substring","color","fontWeight","title","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/deltacoin-project/my-eth-transfer-app/src/App.js"],"sourcesContent":["// src/components/Transfer.js\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport SimpleTransfer from \"./contracts/EtherTransfer.json\"; // Assurez-vous que le chemin est correct\nimport './App.css'\nconst Transfer = () => {\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [web3, setWeb3] = useState(null); // État pour web3\n  const [transactions, setTransactions] = useState([]); // Transactions\n  const [selectedTransaction, setSelectedTransaction] = useState(null); // Détails de la transaction\n  const [isFormOpen, setFormOpen] = useState(false); // État pour gérer l'affichage du formulaire\n \n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n\n        // Récupérer tous les comptes de Ganache ou MetaMask\n        const accounts = await web3Instance.eth.getAccounts();\n        setAccounts(accounts); // Stocker les comptes\n\n        // Initialisation du contrat\n        const networkId = await web3Instance.eth.net.getId();\n        const deployedNetwork = SimpleTransfer.networks[networkId];\n        const contractInstance = new web3Instance.eth.Contract(\n          SimpleTransfer.abi,\n          deployedNetwork && deployedNetwork.address\n        );\n        // console.log(web3Instance.eth.abi.decodeParameter(\"address\",\"0x1a695230000000000000000000000000a7ea720af8ce30e438c1a252ba6905b5dbe50be6\".slice(10)));\n        //console.log(abit);\n        setContract(contractInstance); // Définir le contrat\n        setWeb3(web3Instance); // Stocker l'instance de web3\n\n        // Sélectionner le premier compte par défaut\n        if (accounts.length > 0) {\n          setSelectedAccount(accounts[0]);\n          // Récupérer le solde du compte sélectionné\n          const balance = await web3Instance.eth.getBalance(accounts[0]);\n          setAccountBalance(web3Instance.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n         // const abi = SimpleTransfer.abi;\n          // Charger les transactions du compte principal\n          loadTransactions(web3Instance, accounts[0]);\n        }\n      } catch (error) {\n        alert(\"Error connecting to contract or blockchain\");\n        console.error(\"Error connecting to contract or blockchain\", error);\n      }\n    };\n    init();\n  }, []);\n\n \n  \n  \n  const loadTransactions = async (web3Instance, account) => {\n    //const ab = SimpleTransfer.abi;\n    try {\n      let latestBlock = await web3Instance.eth.getBlockNumber();\n      latestBlock = latestBlock.toString();  // Convertir en chaîne de caractères pour éviter les erreurs BigInt\n  \n      //console.log(`Dernier bloc : ${latestBlock}`);\n  \n      const transactions = [];\n  \n      // Parcourir les blocs récents\n      // for (let i = parseInt(latestBlock); i >= parseInt(latestBlock) - 100 && i >= 0; i--) {\n      //   const block = await web3Instance.eth.getBlock(i, true);\n        \n      //   // Vérifier s'il y a des transactions dans le bloc\n      //   if (block && block.transactions.length > 0) {\n      //     //console.log(`Bloc numéro ${i} contient ${block.transactions.length} transactions`);\n          \n      //  // console.log(block);\n      //     block.transactions.forEach((tx) => {\n      //       const decodedTo = web3Instance.eth.abi.decodeParameter(\"address\", tx.input.slice(10)); // Décoder l'adresse \"to\"\n      //       //console.log(decodedTo);\n      //       // Afficher chaque transaction pour voir ses champs\n      //       //console.log(`Transaction trouvée :`, tx);\n      //       //console.log(tx);\n           \n      //     if ( account.toLowerCase() ===  tx.from.toLowerCase() ||\n      //     decodedTo.toLowerCase() === tx.to?.toLowerCase()\n      //      ) {\n            \n      //       const transactionDetails = {\n      //         hash: tx.hash,\n      //         from: tx.from,\n      //         to : decodedTo,\n             \n      //        // to: web3Instance.eth.abi.decodeParameter(\"address\",tx.input.slice(10)),\n\n      //         value: web3Instance.utils.fromWei(tx.value, \"ether\"), // Convertir en ETH\n      //         timestamp: block.timestamp, // Récupérer le timestamp du bloc\n      //         blockNumber: i,\n      //         type: tx.from.toLowerCase() === account.toLowerCase() ? \"sent\" : \"received\" // Définir le type\n      //       };\n      //      // console.log(`Hash: ${tx.hash}, From: ${tx.from}, To: ${tx.to}, Value: ${tx.value} ETH, Block: ${tx.blockNumber}, Timestamp: ${new Date(tx.timestamp * 1000).toLocaleString()}`);\n            \n      //       transactions.push(transactionDetails); \n      //       console.log(transactions);\n      //       }\n      //     });\n      //   } \n      // }\n      for (let i = parseInt(latestBlock); i >= parseInt(latestBlock) - 100 && i >= 0; i--) {\n        const block = await web3Instance.eth.getBlock(i, true);\n  \n        if (block && block.transactions.length > 0) {\n          block.transactions.forEach((tx) => {\n            let transactionDetails = null;\n            console.log(tx.from,tx.to,account);\n            // Vérifier si l'expéditeur ou le destinataire correspond au compte\n            if (tx.from.toLowerCase() === account.toLowerCase()) {\n              // Transaction envoyée\n              transactionDetails={\n                hash: tx.hash,\n                from: tx.from,\n                to: tx.to,\n                value: web3Instance.utils.fromWei(tx.value, \"ether\"), // Convertir en ETH\n                timestamp: block.timestamp,\n                blockNumber: i,\n                type: \"sent\"\n              };\n            } else if (tx.to && tx.to.toLowerCase() === account.toLowerCase()) {\n              // Transaction reçue\n              console.log(tx.to);\n              transactionDetails ={\n                hash: tx.hash,\n                from: tx.from,\n                to: tx.to,\n                value: web3Instance.utils.fromWei(tx.value, \"ether\"), // Convertir en ETH\n                timestamp: block.timestamp,\n                blockNumber: i,\n                type: \"received\"\n              };\n            }\n            console.log(transactionDetails);\n            if (transactionDetails.type) {\n              transactions.push(transactionDetails); // Ajouter chaque transaction\n            }\n            console.log(transactions);\n          });\n        }\n      }\n     \n      //console.log(\"Transactions récupérées : \", transactions);\n      //return transactions;\n      \n      //console.log(`Transactions associées à l'adresse :`, transactions);\n       // Mettre à jour l'état avec les transactions trouvées\n       setTransactions(transactions);\n       console.log(transactions);\n      } catch (error) {\n      console.error(\"Erreur lors de la connexion au contrat ou à la blockchain :\", error);\n    }\n    \n  };\n  \n\n  const handleTransfer = async () => {\n    if (!recipient || !amount) {\n      setMessage(\"Veuillez entrer une adresse et un montant valides.\");\n      return;\n    }\n\n    const value = Number(amount);\n    if (value <= 0 || value > accountBalance) {\n      setMessage(\"Le montant doit être supérieur à 0 et ne peut pas dépasser le solde.\");\n      return;\n    }\n\n    try {\n      await contract.methods.transfer(recipient).send({\n        from: selectedAccount, // Utiliser le compte sélectionné\n        value: web3.utils.toWei(amount, \"ether\"), // Utiliser l'instance de web3\n      });\n      //alert(`Transfert de ${amount} ETH vers ${recipient} réussi.`)\n      setMessage(`Transfert de ${amount} ETH vers ${recipient} réussi.`);\n      \n      // Mettre à jour le solde du compte après le transfert\n      const balance = await web3.eth.getBalance(selectedAccount); // Vérifier le nouveau solde\n      setAccountBalance(web3.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n    } catch (error) {\n      setMessage(\"Échec du transfert.\");\n      console.error(error);\n    }\n  };\n\n  \n  const openForm = () => setFormOpen(true); // Ouvrir le formulaire de transfert\n  const closeForm = () => setFormOpen(false); // Fermer le formulaire de transfert\n \n  const handleTransactionClick = (tx) => {\n      //console.log(tx);\n    setSelectedTransaction(tx); \n    // Stocker la transaction sélectionnée pour afficher les détails\n    };\n\n  return (\n    \n    <div className=\"containr\">\n      \n     {!selectedAccount && (\n        <>\n\n      <div className=\"titre\">\n        <h1 className=\"text-center\">Bienvenue sur notre DApp</h1>\n      </div>\n     \n      <div className=\"desc\">\n        \n       <p>Cette application décentralisée permet d'effectuer des transferts sécurisés de cryptomonnaies en utilisant la blockchain Ethereum.\n      <br />\n      onnectez votre portefeuille et commencez à envoyer des fonds en toute sécurité !</p>\n      </div>\n</>\n      )}\n\n      {!selectedAccount ? (\n        <button className=\"b btn btn-primary\" style={{ cursor: \"pointer\" }} onClick={() => window.ethereum.request({ method: \"eth_requestAccounts\" })}>\n         Se Connecter\n        </button>\n      ) : (\n        \n        <>\n        <div className=\"Compte\">\n          <h2>Mon Compte : </h2>\n          <p>{selectedAccount}</p> \n          <p> {accountBalance} ETH </p>\n          </div>\n          <button className=\"btn btn-primary t\" style={{ cursor: \"pointer\" }}  onClick={openForm}>Faire un Transfert</button>\n          \n          <p className=\"message\">{message}</p>\n\n          {/* Formulaire de transfert sous forme de pop-up */}\n          {isFormOpen && (\n    <div className=\"modal show\" style={{ display: 'block' }} tabIndex=\"-1\" role=\"dialog\">\n    <div className=\"modal-dialog\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Transférer des Ethers</h5>\n          {/* <button type=\"button\" className=\"close\" onClick={closeForm}>\n            <span>&times;</span>\n          </button> */}\n        </div>\n        <div className=\"modal-body\">\n          <label>Adresse du Destinataire:</label>\n          <select className=\"form-select mb-3\" value={recipient} onChange={(e) => setRecipient(e.target.value)}>\n            <option value=\"\">Sélectionnez une adresse</option>\n            {accounts.map((account, index) => (\n              <option key={index} value={account}>\n                {account}\n              </option>\n            ))}\n          </select>\n\n          <label>Montant (ETH):</label>\n          <input\n            type=\"number\"\n            className=\"form-control mb-3\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-primary\" onClick={handleTransfer}>Envoyer</button>\n          <button className=\"btn btn-danger\" onClick={closeForm}>Fermer</button>\n        </div>\n      </div>\n    </div>\n  </div>\n)}\n\n\n  {/* Liste des transactions simplifiée */}\n  <h3 className=\"tr\">Mes Transactions </h3>\n    <div className=\"ls\">\n          <ul className=\"list-group \">\n              <li className=\"list-group-item  d-flex justify-content-between align-items-center\"\n                  >\n                  <span className=\"badge rounded-pill\">#</span>\n\n                  <p><strong>Hash</strong></p>\n                  <p><strong>Montant</strong> </p>\n                </li>\n            {transactions.length > 0 ? (\n              transactions.map((tx, index) => (\n                \n                <li\n                  key={index}\n                  className=\"list-group-item  d-flex justify-content-between align-items-center\"\n                  onClick={() => handleTransactionClick(tx)}\n                  style={{ cursor: \"pointer\" }}\n                      >\n                  <span className=\"badge rounded-pill\">{tx.blockNumber}</span>\n\n                  <p><strong> {tx.hash.substring(0, 20)}...</strong></p>\n                  <p style={{\n              color: tx.type === \"sent\" ? \"red\" : \"green\",\n              fontWeight: \"bold\",\n            }}>\n              <strong> \n            {tx.type === \"sent\" ? `- ${tx.value} ETH` : `+ ${tx.value} ETH`}</strong> </p>\n             </li>\n              ))\n            ) : (\n              <p>Aucune transaction trouvée.</p>\n            )}\n          </ul>\n          </div>\n          \n          {/* Détails de la transaction sélectionnée */}\n          {selectedTransaction && (\n  <div className=\"modal show\" style={{ display: 'block' }} tabIndex=\"-1\" role=\"dialog\">\n    <div className=\"modal-dialog\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\"> Transaction {selectedTransaction.blockNumber}</h5>\n          {/* <button type=\"button\" className=\"close\" onClick={() => setSelectedTransaction(null)}>\n            <span>&times;</span>\n          </button> */}\n        </div>\n        <div className=\"modal-body\">\n        <p><strong>Hash:</strong> <span title={selectedTransaction.hash}>{selectedTransaction.hash.substring(0, 20)}...{selectedTransaction.hash.substring(selectedTransaction.hash.length - 20)}</span></p>\n\n          <p><strong> Tranfer de </strong> {selectedTransaction.value} ETH</p>\n          <p>{/* Différenciation Envoi/Réception */}\n          {selectedTransaction.type === \"sent\" ? (\n              <span className=\"badge bg-danger\">Envoyée</span>\n            ) : (\n              <span className=\"badge bg-success\">Reçue</span>\n            )}\n          </p>\n         \n          <p><strong>Le:</strong> {new Date(selectedTransaction.timestamp.toString() * 1000).toLocaleString()}</p>\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-danger\" onClick={() => setSelectedTransaction(null)}>Fermer</button>\n        </div>\n      </div>\n    </div>\n  </div>\n)}\n\n        </>\n      )}\n    </div>\n  );\n  \n};\n\nexport default Transfer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}