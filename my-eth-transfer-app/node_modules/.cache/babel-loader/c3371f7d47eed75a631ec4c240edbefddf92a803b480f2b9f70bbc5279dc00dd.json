{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\deltacoin-project\\\\my-eth-transfer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/components/Transfer.js\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport SimpleTransfer from \"./contracts/EtherTransfer.json\"; // Assurez-vous que le chemin est correct\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transfer = () => {\n  _s();\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [web3, setWeb3] = useState(null); // État pour web3\n  const [transactions, setTransactions] = useState([]); // Transactions\n  const [selectedTransaction, setSelectedTransaction] = useState(null); // Détails de la transaction\n  const [isFormOpen, setFormOpen] = useState(false); // État pour gérer l'affichage du formulaire\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        // Récupérer tous les comptes de Ganache ou MetaMask\n        const accounts = await web3Instance.eth.getAccounts();\n        setAccounts(accounts); // Stocker les comptes\n\n        // Initialisation du contrat\n        const networkId = await web3Instance.eth.net.getId();\n        const deployedNetwork = SimpleTransfer.networks[networkId];\n        const contractInstance = new web3Instance.eth.Contract(SimpleTransfer.abi, deployedNetwork && deployedNetwork.address);\n        setContract(contractInstance); // Définir le contrat\n        setWeb3(web3Instance); // Stocker l'instance de web3\n\n        // Sélectionner le premier compte par défaut\n        if (accounts.length > 0) {\n          setSelectedAccount(accounts[0]);\n          // Récupérer le solde du compte sélectionné\n          const balance = await web3Instance.eth.getBalance(accounts[0]);\n          setAccountBalance(web3Instance.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n\n          // Charger les transactions du compte principal\n          await loadTransactions(web3Instance, accounts[0]);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to contract or blockchain\", error);\n      }\n    };\n    init();\n  }, []);\n  const loadTransactions = async (web3Instance, account) => {\n    try {\n      let latestBlock = await web3Instance.eth.getBlockNumber();\n      latestBlock = latestBlock.toString(); // Convertir en chaîne de caractères pour éviter les erreurs BigInt\n\n      //console.log(`Dernier bloc : ${latestBlock}`);\n\n      const transactions = [];\n\n      // Parcourir les blocs récents\n      for (let i = parseInt(latestBlock); i >= parseInt(latestBlock) - 100 && i >= 0; i--) {\n        const block = await web3Instance.eth.getBlock(i, true);\n\n        // Vérifier s'il y a des transactions dans le bloc\n        if (block && block.transactions.length > 0) {\n          //console.log(`Bloc numéro ${i} contient ${block.transactions.length} transactions`);\n\n          block.transactions.forEach(tx => {\n            // Afficher chaque transaction pour voir ses champs\n            //console.log(`Transaction trouvée :`, tx);\n\n            if (account.toLowerCase() === tx.from.toLowerCase()) {\n              const transactionDetails = {\n                hash: tx.hash,\n                from: tx.from,\n                to: tx.to,\n                value: web3Instance.utils.fromWei(tx.value, \"ether\"),\n                // Convertir en ETH\n                timestamp: block.timestamp,\n                // Récupérer le timestamp du bloc\n                blockNumber: i\n              };\n              transactions.push(transactionDetails);\n            }\n          });\n        }\n      }\n      setTransactions(transactions);\n      //console.log(`Transactions associées à l'adresse :`, transactions);\n      // Mettre à jour l'état avec les transactions trouvées\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au contrat ou à la blockchain :\", error);\n    }\n  };\n  const handleTransfer = async () => {\n    if (!recipient || !amount) {\n      setMessage(\"Veuillez entrer une adresse et un montant valides.\");\n      return;\n    }\n    const value = Number(amount);\n    if (value <= 0 || value > accountBalance) {\n      setMessage(\"Le montant doit être supérieur à 0 et ne peut pas dépasser le solde.\");\n      return;\n    }\n    try {\n      await contract.methods.transfer(recipient).send({\n        from: selectedAccount,\n        // Utiliser le compte sélectionné\n        value: web3.utils.toWei(amount, \"ether\") // Utiliser l'instance de web3\n      });\n      //alert(`Transfert de ${amount} ETH vers ${recipient} réussi.`)\n      setMessage(`Transfert de ${amount} ETH vers ${recipient} réussi.`);\n\n      // Mettre à jour le solde du compte après le transfert\n      const balance = await web3.eth.getBalance(selectedAccount); // Vérifier le nouveau solde\n      setAccountBalance(web3.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n    } catch (error) {\n      setMessage(\"Échec du transfert.\");\n      console.error(error);\n    }\n  };\n  const openForm = () => setFormOpen(true); // Ouvrir le formulaire de transfert\n  const closeForm = () => setFormOpen(false); // Fermer le formulaire de transfert\n\n  const handleTransactionClick = tx => {\n    setSelectedTransaction(tx);\n\n    // Stocker la transaction sélectionnée pour afficher les détails\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Transfert de Cryptomonnaie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), !selectedAccount ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }),\n      children: \"Connecter le Compte Principal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Compte : \", selectedAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Solde : \", accountBalance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: openForm,\n        children: \"Faire un Transfert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), isFormOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal show\",\n        style: {\n          display: 'block'\n        },\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                children: \"Transf\\xE9rer des Ethers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                onClick: closeForm,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Adresse du Destinataire:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select mb-3\",\n                value: recipient,\n                onChange: e => setRecipient(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"S\\xE9lectionnez une adresse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 13\n                }, this), accounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: account,\n                  children: account\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 15\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Montant (ETH):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"form-control mb-3\",\n                value: amount,\n                onChange: e => setAmount(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleTransfer,\n                children: \"Envoyer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: closeForm,\n                children: \"Fermer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-5\",\n        children: \"Transactions du Compte Principal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: transactions.length > 0 ? transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          onClick: () => handleTransactionClick(tx),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hash :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 22\n            }, this), \" \", tx.hash.substring(0, 10), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Montant :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 22\n            }, this), \" \", tx.value, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucune transaction trouv\\xE9e.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), selectedTransaction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal show\",\n        style: {\n          display: 'block'\n        },\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                children: [\" Transaction \", selectedTransaction.blockNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Hash:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 12\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: selectedTransaction.hash,\n                  children: [selectedTransaction.hash.substring(0, 10), \"...\", selectedTransaction.hash.substring(selectedTransaction.hash.length - 10)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Tranfer de \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 14\n                }, this), \" \", selectedTransaction.value, \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\xC0:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 14\n                }, this), \" \", selectedTransaction.to]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Le:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 14\n                }, this), \" \", new Date(selectedTransaction.timestamp.toString() * 1000).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => setSelectedTransaction(null),\n                children: \"Fermer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Transfer, \"Cncz+397qAzvW6zHQQ5VpcmfjB4=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useEffect","Web3","SimpleTransfer","jsxDEV","_jsxDEV","Fragment","_Fragment","Transfer","_s","selectedAccount","setSelectedAccount","accounts","setAccounts","contract","setContract","accountBalance","setAccountBalance","recipient","setRecipient","amount","setAmount","message","setMessage","web3","setWeb3","transactions","setTransactions","selectedTransaction","setSelectedTransaction","isFormOpen","setFormOpen","init","web3Instance","window","ethereum","request","method","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","length","balance","getBalance","utils","fromWei","loadTransactions","error","console","account","latestBlock","getBlockNumber","toString","i","parseInt","block","getBlock","forEach","tx","toLowerCase","from","transactionDetails","hash","to","value","timestamp","blockNumber","push","handleTransfer","Number","methods","transfer","send","toWei","openForm","closeForm","handleTransactionClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","tabIndex","role","type","onChange","e","target","map","index","cursor","substring","title","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/deltacoin-project/my-eth-transfer-app/src/App.js"],"sourcesContent":["// src/components/Transfer.js\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport SimpleTransfer from \"./contracts/EtherTransfer.json\"; // Assurez-vous que le chemin est correct\n\nconst Transfer = () => {\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [web3, setWeb3] = useState(null); // État pour web3\n  const [transactions, setTransactions] = useState([]); // Transactions\n  const [selectedTransaction, setSelectedTransaction] = useState(null); // Détails de la transaction\n  const [isFormOpen, setFormOpen] = useState(false); // État pour gérer l'affichage du formulaire\n  \n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n\n        // Récupérer tous les comptes de Ganache ou MetaMask\n        const accounts = await web3Instance.eth.getAccounts();\n        setAccounts(accounts); // Stocker les comptes\n\n        // Initialisation du contrat\n        const networkId = await web3Instance.eth.net.getId();\n        const deployedNetwork = SimpleTransfer.networks[networkId];\n        const contractInstance = new web3Instance.eth.Contract(\n          SimpleTransfer.abi,\n          deployedNetwork && deployedNetwork.address\n        );\n        setContract(contractInstance); // Définir le contrat\n        setWeb3(web3Instance); // Stocker l'instance de web3\n\n        // Sélectionner le premier compte par défaut\n        if (accounts.length > 0) {\n          setSelectedAccount(accounts[0]);\n          // Récupérer le solde du compte sélectionné\n          const balance = await web3Instance.eth.getBalance(accounts[0]);\n          setAccountBalance(web3Instance.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n\n          // Charger les transactions du compte principal\n          await loadTransactions(web3Instance, accounts[0]);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to contract or blockchain\", error);\n      }\n    };\n    init();\n  }, []);\n\n \n  \n  \n  const loadTransactions = async (web3Instance, account) => {\n    try {\n      let latestBlock = await web3Instance.eth.getBlockNumber();\n      latestBlock = latestBlock.toString();  // Convertir en chaîne de caractères pour éviter les erreurs BigInt\n  \n      //console.log(`Dernier bloc : ${latestBlock}`);\n  \n      const transactions = [];\n  \n      // Parcourir les blocs récents\n      for (let i = parseInt(latestBlock); i >= parseInt(latestBlock) - 100 && i >= 0; i--) {\n        const block = await web3Instance.eth.getBlock(i, true);\n  \n        // Vérifier s'il y a des transactions dans le bloc\n        if (block && block.transactions.length > 0) {\n          //console.log(`Bloc numéro ${i} contient ${block.transactions.length} transactions`);\n  \n          block.transactions.forEach((tx) => {\n            // Afficher chaque transaction pour voir ses champs\n            //console.log(`Transaction trouvée :`, tx);\n            \n           \n          if ( account.toLowerCase() ===  tx.from.toLowerCase() ) {\n            const transactionDetails = {\n              hash: tx.hash,\n              from: tx.from,\n              to: tx.to,\n              value: web3Instance.utils.fromWei(tx.value, \"ether\"), // Convertir en ETH\n              timestamp: block.timestamp, // Récupérer le timestamp du bloc\n              blockNumber: i\n            };\n            transactions.push(transactionDetails); \n            }\n          });\n        } \n      }\n      setTransactions(transactions);\n      //console.log(`Transactions associées à l'adresse :`, transactions);\n       // Mettre à jour l'état avec les transactions trouvées\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au contrat ou à la blockchain :\", error);\n    }\n  };\n  \n\n  const handleTransfer = async () => {\n    if (!recipient || !amount) {\n      setMessage(\"Veuillez entrer une adresse et un montant valides.\");\n      return;\n    }\n\n    const value = Number(amount);\n    if (value <= 0 || value > accountBalance) {\n      setMessage(\"Le montant doit être supérieur à 0 et ne peut pas dépasser le solde.\");\n      return;\n    }\n\n    try {\n      await contract.methods.transfer(recipient).send({\n        from: selectedAccount, // Utiliser le compte sélectionné\n        value: web3.utils.toWei(amount, \"ether\"), // Utiliser l'instance de web3\n      });\n      //alert(`Transfert de ${amount} ETH vers ${recipient} réussi.`)\n      setMessage(`Transfert de ${amount} ETH vers ${recipient} réussi.`);\n      \n      // Mettre à jour le solde du compte après le transfert\n      const balance = await web3.eth.getBalance(selectedAccount); // Vérifier le nouveau solde\n      setAccountBalance(web3.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n    } catch (error) {\n      setMessage(\"Échec du transfert.\");\n      console.error(error);\n    }\n  };\n\n  \n  const openForm = () => setFormOpen(true); // Ouvrir le formulaire de transfert\n  const closeForm = () => setFormOpen(false); // Fermer le formulaire de transfert\n \n    const handleTransactionClick = (tx) => {\n    setSelectedTransaction(tx); \n   \n    // Stocker la transaction sélectionnée pour afficher les détails\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">Transfert de Cryptomonnaie</h1>\n      {!selectedAccount ? (\n        <button className=\"btn btn-primary\" onClick={() => window.ethereum.request({ method: \"eth_requestAccounts\" })}>\n          Connecter le Compte Principal\n        </button>\n      ) : (\n        <>\n          <h2>Compte : {selectedAccount}</h2>\n          <h2>Solde : {accountBalance} ETH</h2>\n          <button className=\"btn btn-success\" onClick={openForm}>Faire un Transfert</button>\n          <p>{message}</p>\n\n          {/* Formulaire de transfert sous forme de pop-up */}\n          {isFormOpen && (\n  <div className=\"modal show\" style={{ display: 'block' }} tabIndex=\"-1\" role=\"dialog\">\n    <div className=\"modal-dialog\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Transférer des Ethers</h5>\n          <button type=\"button\" className=\"close\" onClick={closeForm}>\n            <span>&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <label>Adresse du Destinataire:</label>\n          <select className=\"form-select mb-3\" value={recipient} onChange={(e) => setRecipient(e.target.value)}>\n            <option value=\"\">Sélectionnez une adresse</option>\n            {accounts.map((account, index) => (\n              <option key={index} value={account}>\n                {account}\n              </option>\n            ))}\n          </select>\n\n          <label>Montant (ETH):</label>\n          <input\n            type=\"number\"\n            className=\"form-control mb-3\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-primary\" onClick={handleTransfer}>Envoyer</button>\n          <button className=\"btn btn-danger\" onClick={closeForm}>Fermer</button>\n        </div>\n      </div>\n    </div>\n  </div>\n)}\n\n\n  {/* Liste des transactions simplifiée */}\n  <h3 className=\"mt-5\">Transactions du Compte Principal</h3>\n          <ul className=\"list-group\">\n            {transactions.length > 0 ? (\n              transactions.map((tx, index) => (\n                <li\n                  key={index}\n                  className=\"list-group-item\"\n                  onClick={() => handleTransactionClick(tx)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <p><strong>Hash :</strong> {tx.hash.substring(0, 10)}...</p>\n                  <p><strong>Montant :</strong> {tx.value} ETH</p>\n                </li>\n              ))\n            ) : (\n              <p>Aucune transaction trouvée.</p>\n            )}\n          </ul>\n\n          \n          {/* Détails de la transaction sélectionnée */}\n          {selectedTransaction && (\n  <div className=\"modal show\" style={{ display: 'block' }} tabIndex=\"-1\" role=\"dialog\">\n    <div className=\"modal-dialog\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\"> Transaction {selectedTransaction.blockNumber}</h5>\n          {/* <button type=\"button\" className=\"close\" onClick={() => setSelectedTransaction(null)}>\n            <span>&times;</span>\n          </button> */}\n        </div>\n        <div className=\"modal-body\">\n        <p><strong>Hash:</strong> <span title={selectedTransaction.hash}>{selectedTransaction.hash.substring(0, 10)}...{selectedTransaction.hash.substring(selectedTransaction.hash.length - 10)}</span></p>\n\n          <p><strong> Tranfer de </strong> {selectedTransaction.value} ETH</p>\n          <p><strong>À:</strong> {selectedTransaction.to}</p>\n         \n          <p><strong>Le:</strong> {new Date(selectedTransaction.timestamp.toString() * 1000).toLocaleString()}</p>\n        </div>\n        <div className=\"modal-footer\">\n          <button className=\"btn btn-danger\" onClick={() => setSelectedTransaction(null)}>Fermer</button>\n        </div>\n      </div>\n    </div>\n  </div>\n)}\n\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Transfer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}