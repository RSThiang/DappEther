{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\deltacoin-project\\\\my-eth-transfer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from \"react\";\nimport Login from \"./components/connexion\";\nimport Transfer from \"./components/Transfer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const handleLogin = () => {\n    const account = window.ethereum.selectedAddress; // Récupérer l'adresse sélectionnée\n    setSelectedAccount(account); // Mettre à jour l'état avec l'adresse du compte\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !selectedAccount ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenue, \", selectedAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Transfer, {\n        selectedAccount: selectedAccount,\n        setSelectedAccount: setSelectedAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AZEBinU+nMzMBIaZlxPbuktJ1L0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Transfer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedAccount","setSelectedAccount","handleLogin","account","window","ethereum","selectedAddress","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/deltacoin-project/my-eth-transfer-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from \"react\";\nimport Login from \"./components/connexion\";\nimport Transfer from \"./components/Transfer\";\n\nconst App = () => {\n  const [selectedAccount, setSelectedAccount] = useState(null);\n\n  const handleLogin = () => {\n    const account = window.ethereum.selectedAddress; // Récupérer l'adresse sélectionnée\n    setSelectedAccount(account); // Mettre à jour l'état avec l'adresse du compte\n  };\n\n  return (\n    <div>\n      {!selectedAccount ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <>\n          <h2>Bienvenue, {selectedAccount}</h2>\n          <Transfer selectedAccount={selectedAccount} setSelectedAccount={setSelectedAccount} /> {/* Passer setSelectedAccount ici */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,eAAe,CAAC,CAAC;IACjDL,kBAAkB,CAACE,OAAO,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,oBACER,OAAA;IAAAY,QAAA,EACG,CAACP,eAAe,gBACfL,OAAA,CAACH,KAAK;MAACgB,OAAO,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/BjB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA;QAAAY,QAAA,GAAI,aAAW,EAACP,eAAe;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCjB,OAAA,CAACF,QAAQ;QAACO,eAAe,EAAEA,eAAgB;QAACC,kBAAkB,EAAEA;MAAmB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA,eACvF;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CApBID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}