{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\deltacoin-project\\\\my-eth-transfer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/components/Transfer.js\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport SimpleTransfer from \"./contracts/EtherTransfer.json\"; // Assurez-vous que le chemin est correct\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transfer = () => {\n  _s();\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [web3, setWeb3] = useState(null); // État pour web3\n  const [isFormOpen, setFormOpen] = useState(false); // État pour le pop-up\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n\n        // Récupérer tous les comptes de Ganache\n        const accounts = await web3Instance.eth.getAccounts();\n        setAccounts(accounts); // Stocker les comptes\n\n        // Initialisation du contrat\n        const networkId = await web3Instance.eth.net.getId();\n        const deployedNetwork = SimpleTransfer.networks[networkId];\n        const contractInstance = new web3Instance.eth.Contract(SimpleTransfer.abi, deployedNetwork && deployedNetwork.address);\n        setContract(contractInstance); // Définir le contrat\n        setWeb3(web3Instance); // Stocker l'instance de web3\n\n        // Sélectionner le premier compte par défaut\n        if (accounts.length > 0) {\n          setSelectedAccount(accounts[0]);\n          // Récupérer le solde du compte sélectionné\n          const balance = await web3Instance.eth.getBalance(accounts[0]);\n          setAccountBalance(web3Instance.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n        }\n      } catch (error) {\n        console.error(\"Error connecting to contract or blockchain\", error);\n      }\n    };\n    init();\n  }, []);\n  const loadTransactions = async (web3Instance, account) => {\n    const latestBlock = await web3Instance.eth.getBlockNumber();\n    const transactions = [];\n\n    // Parcourir les blocs récents pour trouver les transactions liées au compte\n    for (let i = latestBlock; i >= latestBlock - 100 && i >= 0; i--) {\n      // Limiter à 100 blocs pour des raisons de performance\n      const block = await web3Instance.eth.getBlock(i, true);\n      if (block && block.transactions) {\n        block.transactions.forEach(tx => {\n          if (tx.from === account || tx.to === account) {\n            // Filtrer les transactions associées à l'adresse\n            transactions.push(tx);\n          }\n        });\n      }\n    }\n    setTransactions(transactions); // Stocker les transactions dans l'état\n  };\n  const handleTransfer = async () => {\n    if (!recipient || !amount) {\n      setMessage(\"Veuillez entrer une adresse et un montant valides.\");\n      return;\n    }\n    const value = Number(amount);\n    if (value <= 0 || value > accountBalance) {\n      setMessage(\"Le montant doit être supérieur à 0 et ne peut pas dépasser le solde.\");\n      return;\n    }\n    try {\n      await contract.methods.transfer(recipient).send({\n        from: selectedAccount,\n        // Utiliser le compte sélectionné\n        value: web3.utils.toWei(amount, \"ether\") // Convertir le montant en Wei\n      });\n      setMessage(`Transfert de ${amount} ETH vers ${recipient} réussi.`);\n\n      // Mettre à jour le solde du compte après le transfert\n      const balance = await web3.eth.getBalance(selectedAccount); // Vérifier le nouveau solde\n      setAccountBalance(web3.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n      await loadTransactions(web3, selectedAccount); // Recharger les transactions après le transfert\n\n      closeForm(); // Fermer le pop-up après le transfert\n    } catch (error) {\n      setMessage(\"Échec du transfert : \" + error.message);\n      console.error(error);\n    }\n  };\n  const openForm = () => setFormOpen(true);\n  const closeForm = () => setFormOpen(false);\n  const handleTransactionClick = tx => {\n    setSelectedTransaction(tx); // Stocker la transaction sélectionnée pour afficher les détails\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Transfert de Cryptomonnaie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), !selectedAccount ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }),\n      children: \"Connecter le Compte Principal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Compte : \", selectedAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Solde : \", accountBalance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: openForm,\n        children: \"Faire un Transfert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), isFormOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-popup show card p-4 mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Transf\\xE9rer des Ethers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Adresse du Destinataire:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select mb-3\",\n          value: recipient,\n          onChange: e => setRecipient(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"S\\xE9lectionnez une adresse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), accounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: account,\n            children: account\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Montant (ETH):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control mb-3\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleTransfer,\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger ms-2\",\n          onClick: closeForm,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-5\",\n        children: \"Transactions du Compte Principal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: transactions.length > 0 ? transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          onClick: () => handleTransactionClick(tx),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Num\\xE9ro de Transaction :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 22\n            }, this), \" \", tx.hash.substring(0, 10), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Montant :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 22\n            }, this), \" \", tx.value && web3.utils.fromWei(tx.value, \"ether\"), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucune transaction trouv\\xE9e.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), selectedTransaction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-4 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"D\\xE9tails de la Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 18\n          }, this), \" \", selectedTransaction.hash]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"De:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 18\n          }, this), \" \", selectedTransaction.from]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xC0:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 18\n          }, this), \" \", selectedTransaction.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valeur:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 18\n          }, this), \" \", selectedTransaction.value && web3.utils.fromWei(selectedTransaction.value, \"ether\"), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bloc:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 18\n          }, this), \" \", selectedTransaction.blockNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Transfer, \"6kYeKyCJh4dhGoRgu5Zi8dHU+0A=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useEffect","Web3","SimpleTransfer","jsxDEV","_jsxDEV","Fragment","_Fragment","Transfer","_s","selectedAccount","setSelectedAccount","accounts","setAccounts","contract","setContract","accountBalance","setAccountBalance","recipient","setRecipient","amount","setAmount","message","setMessage","web3","setWeb3","isFormOpen","setFormOpen","init","web3Instance","window","ethereum","request","method","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","length","balance","getBalance","utils","fromWei","error","console","loadTransactions","account","latestBlock","getBlockNumber","transactions","i","block","getBlock","forEach","tx","from","to","push","setTransactions","handleTransfer","value","Number","methods","transfer","send","toWei","closeForm","openForm","handleTransactionClick","setSelectedTransaction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","map","index","type","style","cursor","hash","substring","selectedTransaction","blockNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/deltacoin-project/my-eth-transfer-app/src/App.js"],"sourcesContent":["// src/components/Transfer.js\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport SimpleTransfer from \"./contracts/EtherTransfer.json\"; // Assurez-vous que le chemin est correct\n\nconst Transfer = () => {\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [web3, setWeb3] = useState(null); // État pour web3\n  const [isFormOpen, setFormOpen] = useState(false); // État pour le pop-up\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = new Web3(window.ethereum);\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n\n        // Récupérer tous les comptes de Ganache\n        const accounts = await web3Instance.eth.getAccounts();\n        setAccounts(accounts); // Stocker les comptes\n\n        // Initialisation du contrat\n        const networkId = await web3Instance.eth.net.getId();\n        const deployedNetwork = SimpleTransfer.networks[networkId];\n        const contractInstance = new web3Instance.eth.Contract(\n          SimpleTransfer.abi,\n          deployedNetwork && deployedNetwork.address\n        );\n        setContract(contractInstance); // Définir le contrat\n        setWeb3(web3Instance); // Stocker l'instance de web3\n\n        // Sélectionner le premier compte par défaut\n        if (accounts.length > 0) {\n          setSelectedAccount(accounts[0]);\n          // Récupérer le solde du compte sélectionné\n          const balance = await web3Instance.eth.getBalance(accounts[0]);\n          setAccountBalance(web3Instance.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n        }\n      } catch (error) {\n        console.error(\"Error connecting to contract or blockchain\", error);\n      }\n    };\n    init();\n  }, []);\n\n\n  const loadTransactions = async (web3Instance, account) => {\n    const latestBlock = await web3Instance.eth.getBlockNumber();\n    const transactions = [];\n\n    // Parcourir les blocs récents pour trouver les transactions liées au compte\n    for (let i = latestBlock; i >= latestBlock - 100 && i >= 0; i--) {  // Limiter à 100 blocs pour des raisons de performance\n      const block = await web3Instance.eth.getBlock(i, true);\n      if (block && block.transactions) {\n        block.transactions.forEach((tx) => {\n          if (tx.from === account || tx.to === account) {  // Filtrer les transactions associées à l'adresse\n            transactions.push(tx);\n          }\n        });\n      }\n    }\n    setTransactions(transactions); // Stocker les transactions dans l'état\n  };\n\n  const handleTransfer = async () => {\n    if (!recipient || !amount) {\n      setMessage(\"Veuillez entrer une adresse et un montant valides.\");\n      return;\n    }\n\n    const value = Number(amount);\n    if (value <= 0 || value > accountBalance) {\n      setMessage(\"Le montant doit être supérieur à 0 et ne peut pas dépasser le solde.\");\n      return;\n    }\n\n    try {\n      await contract.methods.transfer(recipient).send({\n        from: selectedAccount, // Utiliser le compte sélectionné\n        value: web3.utils.toWei(amount, \"ether\"), // Convertir le montant en Wei\n      });\n      setMessage(`Transfert de ${amount} ETH vers ${recipient} réussi.`);\n      \n      // Mettre à jour le solde du compte après le transfert\n      const balance = await web3.eth.getBalance(selectedAccount); // Vérifier le nouveau solde\n      setAccountBalance(web3.utils.fromWei(balance, \"ether\")); // Convertir en ETH\n      await loadTransactions(web3, selectedAccount); // Recharger les transactions après le transfert\n     \n      closeForm(); // Fermer le pop-up après le transfert\n    } catch (error) {\n      setMessage(\"Échec du transfert : \" + error.message);\n      console.error(error);\n    }\n  };\n\n  const openForm = () => setFormOpen(true);\n  const closeForm = () => setFormOpen(false);\n  const handleTransactionClick = (tx) => {\n    setSelectedTransaction(tx); // Stocker la transaction sélectionnée pour afficher les détails\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">Transfert de Cryptomonnaie</h1>\n      {!selectedAccount ? (\n        <button className=\"btn btn-primary\" onClick={() => window.ethereum.request({ method: \"eth_requestAccounts\" })}>\n          Connecter le Compte Principal\n        </button>\n      ) : (\n        <>\n          <h2>Compte : {selectedAccount}</h2>\n          <h2>Solde : {accountBalance} ETH</h2>\n          <button className=\"btn btn-success\" onClick={openForm}>Faire un Transfert</button>\n          <p>{message}</p>\n\n          {/* Pop-up pour le formulaire de transfert */}\n          {isFormOpen && (\n            <div className=\"form-popup show card p-4 mt-3\">\n              <h3>Transférer des Ethers</h3>\n              <label>Adresse du Destinataire:</label>\n              <select className=\"form-select mb-3\" value={recipient} onChange={(e) => setRecipient(e.target.value)}>\n                <option value=\"\">Sélectionnez une adresse</option>\n                {accounts.map((account, index) => (\n                  <option key={index} value={account}>\n                    {account}\n                  </option>\n                ))}\n              </select>\n\n              <label>Montant (ETH):</label>\n              <input\n                type=\"number\"\n                className=\"form-control mb-3\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n              />\n\n              <button className=\"btn btn-primary\" onClick={handleTransfer}>Envoyer</button>\n              <button className=\"btn btn-danger ms-2\" onClick={closeForm}>Fermer</button>\n            </div>\n          )}\n\n          {/* Liste des transactions simplifiée */}\n          <h3 className=\"mt-5\">Transactions du Compte Principal</h3>\n          <ul className=\"list-group\">\n            {transactions.length > 0 ? (\n              transactions.map((tx, index) => (\n                <li\n                  key={index}\n                  className=\"list-group-item\"\n                  onClick={() => handleTransactionClick(tx)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <p><strong>Numéro de Transaction :</strong> {tx.hash.substring(0, 10)}...</p>\n                  <p><strong>Montant :</strong> {tx.value && web3.utils.fromWei(tx.value, \"ether\")} ETH</p>\n                </li>\n              ))\n            ) : (\n              <p>Aucune transaction trouvée.</p>\n            )}\n          </ul>\n\n          {/* Détails de la transaction sélectionnée */}\n          {selectedTransaction && (\n            <div className=\"card mt-4 p-3\">\n              <h4>Détails de la Transaction</h4>\n              <p><strong>Hash:</strong> {selectedTransaction.hash}</p>\n              <p><strong>De:</strong> {selectedTransaction.from}</p>\n              <p><strong>À:</strong> {selectedTransaction.to}</p>\n              <p><strong>Valeur:</strong> {selectedTransaction.value && web3.utils.fromWei(selectedTransaction.value, \"ether\")} ETH</p>\n              <p><strong>Bloc:</strong> {selectedTransaction.blockNumber}</p>\n              </div>\n          )}\n        </>\n      )}\n   \n     \n    </div>\n  );\n};\n\nexport default Transfer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}