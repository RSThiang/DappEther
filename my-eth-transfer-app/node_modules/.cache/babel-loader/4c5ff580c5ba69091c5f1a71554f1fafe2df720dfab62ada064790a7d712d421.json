{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\deltacoin-project\\\\my-eth-transfer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getWeb3, getContract } from \"./web3\";\nimport { base } from \"./base/base.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(base.adresse);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const account = await web3.eth.getAccount();\n        const contract = await getContract(web3);\n        setAccounts(accounts);\n        setContract(contract);\n        setAccount(base.adresse);\n      } catch (error) {\n        console.error(\"Could not connect to contract or chain.\");\n      }\n    };\n    init();\n  }, []);\n  const handleTransfer = async () => {\n    if (contract && recipient && amount) {\n      try {\n        await contract.methods.transferEther(recipient).send({\n          from: accounts[0],\n          value: window.web3.utils.toWei(amount, \"ether\")\n        });\n        setMessage(`Transferred ${amount} ETH to ${recipient}`);\n      } catch (error) {\n        setMessage(\"Transaction failed.\");\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transfer Ether\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"From: \", accounts[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipient Address\",\n      value: recipient,\n      onChange: e => setRecipient(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Amount (ETH)\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransfer,\n      children: \"Send Ether\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"o4Y1CZZUNkkGtL9Af408Ku0eaiU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getWeb3","getContract","base","jsxDEV","_jsxDEV","App","_s","account","setAccount","adresse","accounts","setAccounts","contract","setContract","recipient","setRecipient","amount","setAmount","message","setMessage","init","web3","eth","getAccounts","getAccount","error","console","handleTransfer","methods","transferEther","send","from","value","window","utils","toWei","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/deltacoin-project/my-eth-transfer-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getWeb3, getContract } from \"./web3\";\nimport { base } from \"./base/base.json\";\n\nconst App = () => {\n  const [account, setAccount] = useState(base.adresse)\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState(null);\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const account = await web3.eth.getAccount();\n        const contract = await getContract(web3);\n\n        setAccounts(accounts);\n        setContract(contract);\n        setAccount(base.adresse);\n      } catch (error) {\n        console.error(\"Could not connect to contract or chain.\");\n      }\n    };\n    init();\n  }, []);\n\n  const handleTransfer = async () => {\n    if (contract && recipient && amount) {\n      try {\n        await contract.methods.transferEther(recipient).send({\n          from: accounts[0],\n          value: window.web3.utils.toWei(amount, \"ether\"),\n        });\n        setMessage(`Transferred ${amount} ETH to ${recipient}`);\n      } catch (error) {\n        setMessage(\"Transaction failed.\");\n        console.error(error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Transfer Ether</h1>\n      <p>From: {accounts[0]}</p>\n      <input\n        type=\"text\"\n        placeholder=\"Recipient Address\"\n        value={recipient}\n        onChange={(e) => setRecipient(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Amount (ETH)\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n      />\n      <button onClick={handleTransfer}>Send Ether</button>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}